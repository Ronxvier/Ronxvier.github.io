---
import '../../styles/global.css';
import Header from '../../components/header.astro';
import Footer from '../../components/Footer.astro';
const {pageTitle} = "VimMotions";
---
<style>
			a:link {
		  color: #CBBACD;
		  font-family: 'JetBrains Mono', monospace;
		  font-weight: 300;
		  text-decoration: none;
		}

		a:visited {
		  color: #CBBACD;
		  font-family: 'JetBrains Mono', monospace;
		  font-weight: 300;
		  text-decoration: none;
		}

		a:hover,
		a:focus {
		  color: #D5C4D6;
		  text-decoration: underline;
		}
</style>

<html lang=en>
	<meta charset="utf-8" />
	<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	<meta name="viewport" content="width=device-width" />
	<meta name="generator" content={Astro.generator} />
	<title>{pageTitle}</title>
	<Header />
		<h1>VimMotions</h1>
		<img src="https://github.com/RonelXavier/VimMotions/raw/main/assets/img1.png" style="width:650px; height:auto;"> 
		<p><a href="https://chromewebstore.google.com/detail/vim-motions-for-chrome/ejggdgkfjmoggjddkbbmgpkhakgbghmg?hl=en" target="_blank">[VimMotions]</a> is the first real project I had ever <a href="https://github.com/RonelXavier/VimMotions" target="_blank">[published on github]</a>, and it's creation came from hating editing text outside of vim. I hadn't ever worked in javascript before, so this project was entirely new to me. I learned everything from basic event listeners to traversing the DOM.</p>
		<p>It was only during this project that I learned about how many different ways the browser takes in text input, whether it's in a content-editable div format, or a textarea, or some kind of Virtual DOM. For the sake of widespread functionality and simplicity I decided to handle both textarea and content-editable div based input. Existing extensions that aimed to provide vim motion functionality only did so for virtual DOM or textarea based input, so I didn't find a lot of documentation regarding dealing with content-editable inputs.</p>
		<p>I stopped development on this project a while ago, but occasionally I'll look back on the Chrome Web Store page and see a couple hundred users and think to update it or rebuild it. I have some ideas about injecting keycodes straight into the browser rather than manipulating the text inputs themselves, and I'm certain that's what the Virtual-DOM vim emulators are doing. However, I've realized I might honestly might shove a cactus down my throat before doing that much javascript again, so I wouldn't expect an update anytime soon.</p>
		<video src="https://private-user-images.githubusercontent.com/188875524/437177071-20addd85-0549-4404-918f-7b27b7d433fe.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTM3MDcyODUsIm5iZiI6MTc1MzcwNjk4NSwicGF0aCI6Ii8xODg4NzU1MjQvNDM3MTc3MDcxLTIwYWRkZDg1LTA1NDktNDQwNC05MThmLTdiMjdiN2Q0MzNmZS5tcDQ_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNzI4JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDcyOFQxMjQ5NDVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT00YWJkNzhjM2I4NDRhYmI2ZjM4YTVlYTI4NmFmYWQ4MGM4YmEzY2E4YjU2ZGEyODEyZjA4NGExNmU3MWZjNTYzJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.BBaJeXDmMY_3UM2KYlw-sCy_TpE4AFEMUyUeoxyxh3o" style="width: 700px; height:auto;">
	<Footer />
</html>
